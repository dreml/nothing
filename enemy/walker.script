go.property('max_health', 40)
go.property('attack', 10)
go.property('speed', 75)
go.property('exp_amount', 15)

function init(self)
	self.current_health = self.max_health
	self.is_dead = false

	msg.post('#explosion', 'disable')
end

function final(self)
	-- Add finalization code here
	-- Remove this function if not needed
end

function update(self, dt)
	if self.is_dead then
		return
	end

	local targetPos = go.get_position('player')
	local selfPos = go.get_position()

	sprite.set_hflip('#sprite', targetPos.x < selfPos.x)

	local target_angle = -math.atan2(targetPos.x - selfPos.x, targetPos.y - selfPos.y)
	local target_quat = vmath.quat_rotation_z(target_angle)

	local d = vmath.rotate(target_quat, vmath.vector3(0, 1, 0))
	go.set_position(selfPos + d * self.speed * dt)

end

function on_message(self, message_id, message, sender)
	if message_id == hash('collision_response') then
		if message.other_group == hash('player') then
			msg.post('/player#script', 'attack_by_enemy', {damage = self.attack})
			msg.post('.', 'disable')
		elseif message.other_group == hash('fireball') then
			local fireball_url = msg.url('default', message.other_id, 'script')
			local damage = go.get(fireball_url, 'damage')
			handle_damage(self, damage)
		end
	elseif message_id == hash("animation_done") and sender.fragment == hash('explosion') then
		msg.post('.', 'disable')
	end
end
